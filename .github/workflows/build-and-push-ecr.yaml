name: Build & Push to ECR

on:
  push:
    branches: [ master ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

permissions:
  id-token: write     # OIDC 需要
  contents: read

env:
  AWS_REGION: ap-east-2

concurrency:
  group: ecr-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - name: apigateway
            repository: apigateway
            dockerfile: ./webapi.Dockerfile
          - name: userapi
            repository: userapi
            dockerfile: ./userapi.Dockerfile

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/github-actions-ecr-pusher
          aws-region: ${{ env.AWS_REGION }}
      # ^ 建議在 GitHub「Repository → Settings → Variables」新增 VAR：AWS_ACCOUNT_ID

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push ${{ matrix.name }}
        uses: docker/build-push-action@v5
        with:
          context: .                         # 你的 Dockerfile 會從解決方案根目錄 COPY
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64             # EKS 多為 x86 節點；Graviton 改成 linux/arm64
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ matrix.repository }}:latest
            ${{ steps.login-ecr.outputs.registry }}/${{ matrix.repository }}:sha-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
